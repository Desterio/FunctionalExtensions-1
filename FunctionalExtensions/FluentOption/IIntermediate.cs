//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace FunctionalExtensions.FluentOption
{
	    
	public interface IIntermediate1<T1> : IResult<T1>
	{
		IIntermediate2<T1, TResult> From<TResult>(Func<Option<TResult>> f2);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, TResult> selector);
	}
	    
	public interface IIntermediate2<T1, T2> : IResult<T2>
	{
		IIntermediate3<T1, T2, TResult> From<TResult>(Func<Option<TResult>> f3);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, TResult> selector);
	}
	    
	public interface IIntermediate3<T1, T2, T3> : IResult<T3>
	{
		IIntermediate4<T1, T2, T3, TResult> From<TResult>(Func<Option<TResult>> f4);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, TResult> selector);
	}
	    
	public interface IIntermediate4<T1, T2, T3, T4> : IResult<T4>
	{
		IIntermediate5<T1, T2, T3, T4, TResult> From<TResult>(Func<Option<TResult>> f5);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, T4, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, T4, TResult> selector);
	}
	    
	public interface IIntermediate5<T1, T2, T3, T4, T5> : IResult<T5>
	{
		IIntermediate6<T1, T2, T3, T4, T5, TResult> From<TResult>(Func<Option<TResult>> f6);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, T4, T5, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, T4, T5, TResult> selector);
	}
	    
	public interface IIntermediate6<T1, T2, T3, T4, T5, T6> : IResult<T6>
	{
		IIntermediate7<T1, T2, T3, T4, T5, T6, TResult> From<TResult>(Func<Option<TResult>> f7);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, T4, T5, T6, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, T4, T5, T6, TResult> selector);
	}
	    
	public interface IIntermediate7<T1, T2, T3, T4, T5, T6, T7> : IResult<T7>
	{
		IIntermediate8<T1, T2, T3, T4, T5, T6, T7, TResult> From<TResult>(Func<Option<TResult>> f8);
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, T4, T5, T6, T7, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, T4, T5, T6, T7, TResult> selector);
	}
	    
	public interface IIntermediate8<T1, T2, T3, T4, T5, T6, T7, T8> : IResult<T8>
	{
        IIntermediate1<TResult> Bind<TResult>(Func<T1, T2, T3, T4, T5, T6, T7, T8, Option<TResult>> selector);
        IIntermediate1<TResult> Select<TResult>(Func<T1, T2, T3, T4, T5, T6, T7, T8, TResult> selector);
	}
	
}
